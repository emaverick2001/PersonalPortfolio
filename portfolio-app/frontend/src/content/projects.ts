export const projects = [
  {
    name: "Visual Score",
    image: "/assets/images/project-1.jpg",
    tags: ["JavaScript", "AI"],
    sourceCode: "https://github.com/emaverick2001/VisualScore",
    projectLink: "https://visual-score.com/",
    desc: "Sheet music scoring software designed to serve avant-garde composition",
    overview:
      "VisualScore is a free, open-source program that is re-imagining the future of music notation software. By utilizing the neoscore Python library and constructing an intuitive graphical user interface around it, VisualScore is democratizing the creation of aleatoric and graphic notation for composers of all levels. It stands as one of the only software programs designed to serve avant-garde artistic practices, delivering unmatched flexibility and innovative capabilities. VisualScore is currently in development.",
    features: "TODO",
    gallery: ["TODO1", "TODO2"],
    howItWorks: "TODO",
    directoryStructure: "TODO",
    usage: "TODO",
    importantNotes: "TODO",
    dependencies: ["TODO1", "TODO2"],
    gettingStarted: "TODO",
    contributions: "TODO",
    license: "TODO",
    credits: "TODO",
    acknowledgements: ["TODO1", "TODO2"],
    framework: "TODO",
  },
  {
    name: "PactSpace",
    image: "/assets/images/project-2.jpg",
    tags: ["JavaScript", "AI"],
    sourceCode: "https://github.com/emaverick2001/PactSpace",
    projectLink: "https://www.pactspace.co/",
    desc: "A New Perspective on B2B Networking",
    overview:
      "At PactSpace, we help businesses discover partners, exchange services, and manage contracts, all through an integrated platform with built-in negotiation tools and milestone- based workflows. We bring structure, clarity, and trust to the deal-making process, saving you time, reducing friction, and eliminating manual errors.",
    features: "TODO",
    gallery: ["TODO1", "TODO2"],
    howItWorks: "TODO",
    directoryStructure: "TODO",
    usage: "TODO",
    importantNotes: "TODO",
    dependencies: ["TODO1", "TODO2"],
    gettingStarted: "TODO",
    contributions: "TODO",
    license: "TODO",
    credits: "TODO",
    acknowledgements: ["TODO1", "TODO2"],
    framework: "TODO",
  },
  {
    name: "CTR Analysis",
    image: "/assets/images/project-3.jpg",
    tags: ["DataScience", "AI", "DataMining"],
    sourceCode: "https://github.com/emaverick2001/CTRAnalysis",
    desc: "Exploring CTR classification algorithms and model pipelines",
    overview:
      "In online advertising, click-through rate (CTR) is a very important metric for evaluating ad performance. As a result, click prediction systems are essential and widely used for sponsored search and real-time bidding. This project utilizes data from Avazu on Kaggles CTR prediction contest",
    features: "TODO",
    gallery: ["TODO1", "TODO2"],
    howItWorks: "TODO",
    directoryStructure: "TODO",
    usage: "TODO",
    importantNotes: "TODO",
    dependencies: ["TODO1", "TODO2"],
    gettingStarted: "TODO",
    contributions: "TODO",
    license: "TODO",
    credits: "TODO",
    acknowledgements: ["TODO1", "TODO2"],
    framework: "TODO",
  },
  {
    name: "AI Policy Web Crawler",
    image: "/assets/images/project-7.jpg",
    tags: ["AI", "Policy"],
    sourceCode: "https://github.com/emaverick2001/AIPolicyWebCrawler",
    desc: "Visualize a heat distribution map to see popularity of various AI Policy articles / mentions",
    overview:
      "The project is for Option #11 of the final project for Information Retrieval and Web Agents. The purpose of this program is to catalogue important AI and Machine Learning Policy from the past and present into relevant categories. The output of this project will be then sent to TPS to be hosted within their Ancestry Tree that represents a timeline of AI Policy over time.",
    features: "TODO",
    gallery: ["TODO1", "TODO2"],
    howItWorks: "TODO",
    directoryStructure: "TODO",
    usage: "TODO",
    importantNotes: "TODO",
    dependencies: ["TODO1", "TODO2"],
    gettingStarted: "TODO",
    contributions: "TODO",
    license: "TODO",
    credits: "TODO",
    acknowledgements: ["TODO1", "TODO2"],
    framework: "TODO",
  },
  {
    name: "CPCR DataCatalog",
    image: "/assets/images/project-9.jpg",
    tags: ["Datascience", "DataEngineering"],
    sourceCode: "https://github.com/emaverick2001/DataCatalog",
    desc: "tool designed to support ingestion, harmonization, documentation, and distribution of center-wide data for organization and security purposes",
    overview:
      "A centralized data‐asset metadata and discovery tool designed to support ingestion, harmonization, documentation, and exploration of datasets across analytic workflows and teams",
    features: "TODO",
    gallery: ["TODO1", "TODO2"],
    howItWorks: "TODO",
    directoryStructure: "TODO",
    usage: "TODO",
    importantNotes: "TODO",
    dependencies: ["TODO1", "TODO2"],
    gettingStarted: "TODO",
    contributions: "TODO",
    license: "TODO",
    credits: "TODO",
    acknowledgements: ["TODO1", "TODO2"],
    framework: "TODO",
  },
  {
    name: "PHI-redactor",
    image: "/assets/images/project-6.jpg",
    tags: ["DataScience", "AI", "HealthCare"],
    sourceCode: "https://github.com/emaverick2001/PHI-redactor",
    desc: "Auto-detect and redact PHI information in datasets",
    overview:
      "A privacy-focused text/document processing tool designed to identify and redact Protected Health Information (PHI) from documents and images, enabling secure data handling for research, compliance, and workflows.",
    features: [
      "PHI detection & redaction: Automatically scans documents and image­based files (PDFs, DOCX, JPEG/PNG etc) to detect PHI (names, dates, addresses, IDs) and replaces or masks it to protect personal health data.",
      "Multiple input formats: Supports processing raw text files, structured tables (CSV/Excel), and unstructured image­ or scan­based documents using OCR.",
      "Output structured logs / reports: Generates redacted versions + structured CSV reports summarizing detected PHI items (type, location, original/modified, counts) for downstream auditing.",
      "Pipeline integration friendly: Modular script/Notebook implementation that can be integrated into data- ingestion or ETL pipelines in research labs or enterprises handling PHI.",
      "Visualization & audit support (optional): Outputs patterns of PHI detection (types/frequencies) that help analysts understand redaction coverage and risk exposure.",
    ],
    gallery: ["TODO1", "TODO2"],
    howItWorks: "The PHI-redactor tool is designed to detect and redact Protected Health Information (PHI) from documents and text so that downstream workflows (analyses, sharing, research) can proceed without exposing personal health identifiers.",
    directoryStructure: "TODO",
    usage: "TODO",
    importantNotes: "TODO",
    dependencies: ["TODO1", "TODO2"],
    gettingStarted: "TODO",
    contributions: "TODO",
    license: "TODO",
    credits: "TODO",
    acknowledgements: ["TODO1", "TODO2"],
    framework: "TODO",
  },
  {
    name: "Pure Data Synthesizer + Visualizer",
    image: "/assets/images/project-8.jpg",
    tags: ["Music"],
    sourceCode: "https://github.com/emaverick2001/Pure-Data-Synthesizer",
    desc: "Virtual Modular Synth with various parameters to map onto midi keyboard + control visualizer",
    overview:
      "A creative tool for generating and manipulating synthesizer sounds—built using data processing, audio engineering and visualization workflows to support music production, experimentation and learning.",
    features: "TODO",
    gallery: ["TODO1", "TODO2"],
    howItWorks: "TODO",
    directoryStructure: "TODO",
    usage: "TODO",
    importantNotes: "TODO",
    dependencies: ["TODO1", "TODO2"],
    gettingStarted: "TODO",
    contributions: "TODO",
    license: "TODO",
    credits: "TODO",
    acknowledgements: ["TODO1", "TODO2"],
    framework: "TODO",
  },
  {
    name: "Music Recommendation-system",
    image: "/assets/images/project-5.jpg",
    tags: ["Databases", "SQL", "JavaScript"],
    sourceCode: "https://github.com/emaverick2001/Music-Recommendation-system",
    projectLink: "https://music-information-system.vercel.app/",
    desc: "Music recommendation system using SQL queries",
    overview:
      "A user-centric music recommendation engine designed to suggest songs that align with listener preferences and metadata features. The system leverages data-engineering and machine learning techniques to curate personalized playlists and facilitate discovery of new music.",
    features: [
      "User preference modelling: Captures a user's listening history, genres, artists, and track metadata to build a profile of their tastes",
      "Feature extraction & embedding: Processes track-level attributes (e.g., genre, tempo, mood, instrumentation) to compute vector embeddings representing songs in a high-dimensional space.",
      "Nearest-neighbour search: For a given user profile or seed track, identifies similar songs by similarity in embedding space (e.g., cosine similarity) to provide ranked recommendations.",
      "Cold-start handling: Incorporates metadata-based fallback when user history is minimal, allowing new users or new tracks to be integrated.",
      "Interactive interface (optional): A lightweight UI or script allows users to input a track or artist and receive recommended songs with metadata and links.",
      "Data pipeline: Automated processes for ingesting raw music dataset(s), cleaning, normalizing feature values, and building/update embeddings — aligning with your data engineering focus.",
    ],
    gallery: ["TODO1", "TODO2"],
    howItWorks: "TODO",
    directoryStructure: "TODO",
    usage: "TODO",
    importantNotes: "TODO",
    dependencies: ["TODO1", "TODO2"],
    gettingStarted: "TODO",
    contributions: "TODO",
    license: "TODO",
    credits: "TODO",
    acknowledgements: ["TODO1", "TODO2"],
    framework: "TODO",
  },
  {
    name: "Datastructures & Algos in Python",
    image: "/assets/images/project-4.jpg",
    tags: ["Datastructures", "Algorithms", "Python"],
    sourceCode: "https://github.com/emaverick2001/Datastructures-Algos-in-Python-",
    desc: "Datastructures and Algorithms in Python",
    overview:
      "Implementing Datastructures and Algorithms in Python for practice and coding interviews",
    features: "TODO",
    gallery: ["TODO1", "TODO2"],
    howItWorks: "TODO",
    directoryStructure: "TODO",
    usage: "TODO",
    importantNotes: "TODO",
    dependencies: ["TODO1", "TODO2"],
    gettingStarted: "TODO",
    contributions: "TODO",
    license: "TODO",
    credits: "TODO",
    acknowledgements: ["TODO1", "TODO2"],
    framework: "TODO",
  },
]

export const slugify = (name: string) =>
  name
    .toLowerCase()
    .replace(/\s+/g, "-")
    .replace(/[^a-z0-9\-]/g, "")
